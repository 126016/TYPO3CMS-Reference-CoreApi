.. include:: Images.txt

.. ==================================================
.. FOR YOUR INFORMATION
.. --------------------------------------------------
.. -*- coding: utf-8 -*- with BOM.

.. ==================================================
.. DEFINE SOME TEXTROLES
.. --------------------------------------------------
.. role::   underline
.. role::   typoscript(code)
.. role::   ts(typoscript)
   :class:  typoscript
.. role::   php(code)


Parsing a Data Structure
^^^^^^^^^^^^^^^^^^^^^^^^

You can convert a Data Structure XML document into a PHP array by the
function t3lib\_div::xml2array(). Taking the simple DS above:

::

   <T3DataStructure>
           <meta>
                   <langDisable>1</langDisable>
           </meta>
     <ROOT>
       <type>array</type>
       <el>
         <field_templateObject>
                   <TCEforms>
                           <label>LLL:EXT:mininews/locallang_db.php:tt_content.pi_flexform.select_template</label>
   
                           <config>
                                   <type>select</type>
                                   <items>
                                           <numIndex index=”0”>
                                                   <numIndex index=”0”></numIndex>
                                                   <numIndex index=”1”>0</numIndex>
                                           </numIndex>
                                   </items>
                                   <foreign_table>tx_templavoila_tmplobj</foreign_table>
                                   <foreign_table_where>
                                           AND tx_templavoila_tmplobj.pid=###STORAGE_PID### 
                                           AND tx_templavoila_tmplobj.datastructure="EXT:mininews/template_datastructure.xml" 
                                           AND tx_templavoila_tmplobj.parent=0 
                                           ORDER BY tx_templavoila_tmplobj.title
                                   </foreign_table_where>
                                   <size>1</size>
                                   <minitems>0</minitems>
                                   <maxitems>1</maxitems>
                           </config>
                   </TCEforms>
         </field_templateObject>
       </el>
     </ROOT>
   </T3DataStructure>

Passing this to the xml2array function and you will get an array like
this (screen shot from “extdeveval”):

|img-59|

As you can see the format of the XML generated by
t3lib\_div::array2xml() is designed to reflect the array structures
PHP can contain and thus the transformation to and from XML with the
functions t3lib\_div::array2xml() and t3lib\_div::xml2array() is very
easy and quick.


API functions for sheets
""""""""""""""""""""""""

If you have a DS with sheets inside you might need to resolve the
references:

::

   <T3DataStructure>
     <sheets>
           <sDEF>fileadmin/sheets/default_sheet.xml</sDEF>
       <s_welcome>fileadmin/sheets/welcome_sheet.xml</s_welcome>
     </sheets>
   </T3DataStructure>

This is done by t3lib\_div::resolveSheetDefInDS() or
t3lib\_div::resolveAllSheetsInDS(). In fact, even if you don't have
sheets in your file but just want to stay compatible with DS XML
*with* sheets you should use this function. For instance these
function calls will parse the DS into an array (screen shot above) and
resolve the sheet definition, in this case creating a default sheet
“sDEF” (screen shot below):

::

      $treeDat = t3lib_div::xml2array($inputCode);
           $treeDat = t3lib_div::resolveAllSheetsInDS($treeDat);

|img-60|

